{"version":3,"sources":["components/Task.js","components/Tasks.js","components/Calendar.js","components/buildCal.js","App.js","reportWebVitals.js","index.js"],"names":["Task","taskL","onDelete","className","text","style","color","justifyItems","onClick","id","Tasks","tasks","startDate","sDate","length","map","task","moment","clone","format","type","value","disabled","Calendar","onChange","useState","priority","exp","reminder","setTasks","setStartDate","calendar","setCalendar","useEffect","startDay","startOf","endDay","endOf","day","subtract","end","date","iendDay","add","isBefore","push","Array","fill","weekNum","month","buildCalendar","mon","firstMonth","lastMonth","i","getMonthName","mons","isSame","arg","week","year","selectedDate","currDate","toString","showDate","filter","App","styleRef","useRef","setValue","rel","href","ref","current","classList","toggle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9fd61fab.chunk.js","sourcesContent":["import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({taskL, onDelete}) => {\r\n    return (\r\n        <div className='task'>\r\n            <h3>{taskL.text} <FaTimes style={{ color: 'red', justifyItems: 'right'}} onClick={()=>onDelete(taskL.id)}/></h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Task\r\n","import Task from './Task'\r\nimport moment from 'moment'\r\nimport './Task.css';\r\n\r\nconst Tasks =({tasks, startDate, onDelete})=> {\r\n    return (\r\n        <div className=\"taskContainer\">\r\n          <h2> Date: {startDate.sDate} </h2>\r\n          <div>{tasks.length > 0 ? tasks.map((task)=> (\r\n                <Task key={task.id} taskL={task} startDate={startDate} onDelete={onDelete}/>\r\n            )\r\n          ) : \"No Tasks Today!\"}</div>\r\n          {(startDate.sDate >= moment().clone().format(\"YYYY-MM-DD\")) ? <input type=\"button\" value=\"Submit\"className=\"subBtn\"></input> : <input type=\"button\" value=\"Submit\" className=\"subBtn\" disabled></input>}\r\n        </div>\r\n    )\r\n}\r\nexport default Tasks\r\n","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport buildCalendar from \"./buildCal\";\r\nimport Tasks from './Tasks.js';\r\nimport './Calendar.css'\r\n\r\nconst Calendar = ({ value, onChange }) => {\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            id: 1,\r\n            text: 'Doctors Appointment',\r\n            priority: 5,\r\n            exp: 10,\r\n            sDate: 'test',\r\n            reminder: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            text: 'Homework',\r\n            priority: 4,\r\n            exp: 8,\r\n            sDate: 'test',\r\n            reminder: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            text: 'Cook',\r\n            priority: 3,\r\n            exp: 6,\r\n            sDate: 'test',\r\n            reminder: true,\r\n        }\r\n    ])\r\n    const [startDate, setStartDate] = useState( ()=>\r\n        {return 0}\r\n    )\r\n    const [calendar, setCalendar] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setCalendar(buildCalendar(value));\r\n    }, [value])\r\n\r\n    const mon = [];\r\n    const firstMonth = value.clone().startOf(\"year\").month();\r\n    const lastMonth = value.clone().endOf(\"year\").month();\r\n    function getMonthName() {\r\n        for (let i = firstMonth; i <= lastMonth; ++i)\r\n            mon.push(i)\r\n        return mon;\r\n    }\r\n    function currMonthName() {\r\n        return value.format(\"MMM\");\r\n    }\r\n    function currYear() {\r\n        return value.format(\"YYYY\");\r\n    }\r\n    function nextMonth() {\r\n        return value.clone().add(1, \"month\")\r\n    }\r\n    function prevMonth() {\r\n        return value.clone().subtract(1, \"month\")\r\n    }\r\n    function setMonthName(arg) {\r\n        return value.clone().month(arg)\r\n    }\r\n    const deleteTask = (id) => {\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n    const showDate = (year, month, selectedDate) => {\r\n        const currDate = [startDate];\r\n        var day = moment([year, month, selectedDate]).month(month).format(\"YYYY-MM-DD\")\r\n        currDate.sDate = day.toString()\r\n        setStartDate(currDate);\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n\r\n            <div className=\"calendar\">\r\n                    <div className=\"monthSelect\">\r\n                        {getMonthName().map(mons =>\r\n                            <div key={mons} className={value.isSame(value.clone().month(mons), \"month\") ? \"selectedMonth\" : \"\"} onClick={() => onChange(setMonthName(mons))}>\r\n                                {moment().month(mons).format(\"MMM\")}\r\n                            </div>)}\r\n                    </div>\r\n                <div className=\"Cal2\">\r\n                    <div className=\"Months\">\r\n                        <i className=\"fas fa-angle-left prev\" onClick={() => onChange(prevMonth())}></i>\r\n                            <h1>{currMonthName()} {currYear()} </h1>\r\n                        <i className=\"fas fa-angle-right next\" onClick={() => onChange(nextMonth())}></i>\r\n                    </div>\r\n                    <div className=\"Weeks\">\r\n                        <div>SUN</div>\r\n                        <div>MON</div>\r\n                        <div>TUE</div>\r\n                        <div>WED</div>\r\n                        <div>THU</div>\r\n                        <div>FRI</div>\r\n                        <div>SAT</div>\r\n                    </div>\r\n                    <div className=\"DaysContainer\">\r\n                        {calendar.map(week => <div key={week.toString()} className=\"Days\">{\r\n                            week.map(day => <div key={day} className={(!(day.clone().month() === value.clone().month())) ? \"prevDays\" : (((day.year()=== moment().year())&&(day.date()=== moment().date()) && (value.clone().month() === moment().month()))) ? \"selected\" : \"dy\"} onClick={() => showDate(day.year(), day.month(), day.date())}>\r\n                                {/* {console.log(day.date(), \"same day?\" , moment().date(), \"Bool: \", value.isSame(day.date(), moment().date()))}\r\n                                {console.log(value.month(), \"same month?\" , moment().month())} */}\r\n                                <div> {day.clone().format(\"D\").toString()} </div>\r\n                            </div>)\r\n                        }\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n          <Tasks tasks={tasks} startDate={startDate} onDelete={deleteTask} /> \r\n        </div>\r\n    )\r\n}\r\nexport default Calendar\r\n","export default function buildCalendar(value) {\r\n    const startDay = value.clone().startOf(\"month\").startOf(\"week\");\r\n    var endDay = value.clone().endOf(\"month\").endOf(\"week\");\r\n    const day = startDay.clone().subtract(1, \"day\");\r\n    const calendar = [];\r\n    const totalWeekRows = 6;\r\n    const end = endDay.date();\r\n    function iendDay (end) {\r\n        return endDay.add(end, \"day\");\r\n    }\r\n        while (day.isBefore(endDay, \"day\")) {\r\n            calendar.push(\r\n                Array(7).fill(0).map(() => day.add(1, \"day\").clone())\r\n            );\r\n            //Fill the gap in the panel (Panel can hold a total of 6 rows)\r\n            const weekNum = calendar.length;\r\n            let weekDays = 7;\r\n            if(end === day.date() && endDay.month() === day.month() && weekNum < totalWeekRows) {\r\n                let rowsToFill =  totalWeekRows - weekNum;\r\n                iendDay(rowsToFill * weekDays);\r\n            }\r\n        }\r\n        return calendar;\r\n}\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport moment from 'moment'\r\nimport Calendar from './components/Calendar.js';\r\nimport './style.css';\r\n\r\nconst App = () => {\r\n    const styleRef = useRef();\r\n    function translate() {\r\n        styleRef.current.classList.toggle('nav-active');\r\n    }\r\n    const [value, setValue] = useState(moment());\r\n    return (\r\n        <div className=\"App\">\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"\r\n            />\r\n                    <nav>\r\n                        <div className=\"logo\">\r\n                            <h4>HARRY J</h4>\r\n                        </div>\r\n                        <ul className=\"nav-links\" ref={styleRef}>\r\n                            <li>\r\n                                <a href=\"/#\">Home</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Calendar</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Projects</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">About</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"burger\" onClick={translate}>\r\n                            <div className=\"line1\"></div>\r\n                            <div className=\"line2\"></div>\r\n                            <div className=\"line3\"></div>\r\n                        </div>\r\n                    </nav>\r\n                        <Calendar value={value} onChange={setValue}/>\r\n            </div>\r\n        );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}