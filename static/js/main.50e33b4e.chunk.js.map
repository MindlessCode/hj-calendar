{"version":3,"sources":["components/buildCal.js","components/Task.js","components/NewTask.js","components/Tasks.js","components/ExpBar.js","components/Sunny.js","components/FooterNav.js","components/Calendar.js","components/About.js","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["buildCalendar","value","startDay","clone","startOf","endDay","endOf","day","subtract","calendar","end","date","iendDay","add","isBefore","push","Array","fill","map","weekNum","length","month","Task","taskL","selectedDate","onDelete","onToggle","sDate","eDate","className","reminder","onDoubleClick","id","text","style","color","justifyItems","cursor","onClick","NewTask","onAdd","useState","setText","moment","format","monthSelect","setMonthSelect","daySelect","setDaySelect","yearSelect","setYearSelect","endMonthSelect","setEndMonthSelect","endDaySelect","setEndDaySelect","endYearSelect","setEndYearSelect","setReminder","startYear","year","endYear","selectYears","selectEYears","startMonth","endMonth","startEMonth","endEMonth","mon","monE","months","emonths","startEDay","lastEDay","test","dates","startEDay2","lastEDay2","test2","edates","selectStartHour","k","selectStartMinute","isValidDate","startDate","setStartDate","endDate","setEndDate","onSubmit","e","preventDefault","document","getElementById","innerHTML","type","placeholder","onChange","target","borderColor","defaultValue","textDecoration","checked","currentTarget","Tasks","tasks","setTasks","showAddTask","setShowAddTask","newTask","task","a","fetch","method","headers","body","JSON","stringify","res","json","data","ExpBar","exp1","width","Sunny","props","svg","viewBox","xmlns","initial","animate","d","FooterNav","onSwitch","onXChange","onSelect","select","setToday","location","useLocation","pathname","Calendar","useEffect","fetchTasks","tasksFromServer","getTasks","fetchTask","deleteTask","filter","toggleReminder","taskToToggle","updTask","setSelectedDate","setCalendar","miniCalendar","setMiniCalendar","val","setVal","firstMonth","lastMonth","showDate","isDayAfterStart","nameKey","myArray","i","getTaskName","countTasks","taskCount","svgVariants","hidden","opacity","visible","transition","duration","aria-hidden","week2","day2","toString","getMonthName","mons","isSame","arg","week","variants","visibility","height","About","Home","position","left","top","border","App","setValue","rel","href","to","path","render","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.50e33b4e.chunk.js","sourcesContent":["export default function buildCalendar(value) {\r\n    const startDay = value.clone().startOf(\"month\").startOf(\"week\");\r\n    const endDay = value.clone().endOf(\"month\").endOf(\"week\");\r\n    const day = startDay.clone().subtract(1, \"day\");\r\n    const calendar = [];\r\n    const totalWeekRows = 6;\r\n    const end = endDay.date();\r\n    function iendDay (end) {\r\n        return endDay.add(end, \"day\");\r\n    }\r\n        while (day.isBefore(endDay, \"day\")) {\r\n            calendar.push(\r\n                Array(7).fill(0).map(() => day.add(1, \"day\").clone())\r\n            );\r\n            //Fill the gap in the panel (Panel can hold a total of 6 rows)\r\n            const weekNum = calendar.length;\r\n            if(end === day.date() && endDay.month() === day.month() && weekNum < totalWeekRows) {\r\n                let rowsToFill =  totalWeekRows - weekNum;\r\n                iendDay(rowsToFill * 7);\r\n            }\r\n        }\r\n        return calendar;\r\n}\r\n\r\n","import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({taskL, selectedDate, onDelete, onToggle}) => {\r\n    return (\r\n        (taskL.sDate<=selectedDate && taskL.eDate>=selectedDate)?\r\n        <div className={`task ${taskL.reminder ? 'reminder' : ''}`} onDoubleClick={()=> onToggle(taskL.id)}>\r\n            <h3>{taskL.text}  <FaTimes style={{ color: 'red', justifyItems: 'right', cursor: 'pointer'}} onClick={()=>onDelete(taskL.id)}/></h3>\r\n            <p>Starts: {taskL.sDate}</p>\r\n            <p>Ends: {taskL.eDate}</p>\r\n        </div>: \"\"\r\n    )\r\n}\r\nexport default Task\r\n","import React, { useState } from 'react'\r\nimport moment from 'moment'\r\nimport './Task.css';\r\n\r\nconst NewTask = ({ onAdd, selectedDate }) => {\r\n    const [text, setText] = useState('')\r\n    const [monthSelect, setMonthSelect] = useState(moment().clone().format(\"MM\"))\r\n    const [daySelect, setDaySelect] = useState(moment().clone().format(\"DD\"))\r\n    const [yearSelect, setYearSelect] = useState(moment().clone().format(\"YYYY\"))\r\n    const [endMonthSelect, setEndMonthSelect] = useState(moment().clone().format(\"MM\"))\r\n    const [endDaySelect, setEndDaySelect] = useState(moment().clone().format(\"DD\"))\r\n    const [endYearSelect, setEndYearSelect] = useState(moment().clone().format(\"YYYY\"))\r\n    const [reminder, setReminder] = useState(false)\r\n    //year drop down\r\n    var startYear = moment().clone().year()\r\n    const endYear = moment().clone().year() + 10\r\n    const selectYears = [];\r\n    const selectEYears = [];\r\n    while (startYear <= endYear) {\r\n        selectYears.push(startYear)\r\n        selectEYears.push(startYear)\r\n        startYear++;\r\n    }\r\n    //month drop down\r\n    const startMonth = moment().clone().startOf(\"year\")\r\n    const endMonth = moment().clone().endOf(\"year\")\r\n    const startEMonth = moment().clone().startOf(\"year\")\r\n    const endEMonth = moment().clone().endOf(\"year\")\r\n    const mon = startMonth.subtract(1, \"month\")\r\n    const monE = startEMonth.subtract(1, \"month\")\r\n    const months = [];\r\n    const emonths = [];\r\n    while (startMonth.isBefore(endMonth, \"month\")) {\r\n        months.push(mon.add(1, \"month\").clone())\r\n    }\r\n    while (startEMonth.isBefore(endEMonth, \"month\")) {\r\n        emonths.push(monE.add(1, \"month\").clone())\r\n    }\r\n    //day drop down\r\n    const startEDay = moment(yearSelect + '-' + monthSelect, \"YYYY-MM\").clone().startOf(\"month\");\r\n    const lastEDay = moment(yearSelect + '-' + monthSelect, \"YYYY-MM\").clone().endOf(\"month\");\r\n    const test = startEDay.subtract(1, \"day\")\r\n    const dates = [];\r\n    while (startEDay.isBefore(lastEDay, \"day\")) {\r\n        dates.push(test.add(1, \"day\").clone())\r\n    }\r\n    const startEDay2 = moment(endYearSelect + '-' + endMonthSelect, \"YYYY-MM\").clone().startOf(\"month\");\r\n    const lastEDay2 = moment(endYearSelect + '-' + endMonthSelect, \"YYYY-MM\").clone().endOf(\"month\");\r\n    const test2 = startEDay2.subtract(1, \"day\")\r\n    const edates = []\r\n    while (startEDay2.isBefore(lastEDay2, \"day\")) {\r\n        edates.push(test2.add(1, \"day\").clone())\r\n    }\r\n    //time drop down\r\n    const selectStartHour = []\r\n    for (let k = 1; k <= 12; ++k) {\r\n        selectStartHour.push(moment(k, \"hh\").clone())\r\n    }\r\n    const selectStartMinute = []\r\n    for (let k = 0; k <= 59; ++k) {\r\n        if (k <= 9) {\r\n            selectStartMinute.push(moment('0' + k, \"mm\").clone())\r\n        }\r\n        else {\r\n            selectStartMinute.push(moment(k, \"mm\").clone())\r\n\r\n        }\r\n    }\r\n    function isValidDate() {\r\n\r\n        if (moment(yearSelect + '-' + monthSelect + '-' + daySelect, \"YYYY-MM-DD\") > moment(endYearSelect + '-' + endMonthSelect + '-' + endDaySelect, \"YYYY-MM-DD\")) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (!text) {\r\n            document.getElementById(\"task-error\").innerHTML = \"Please enter a task name\"\r\n            return\r\n        }\r\n        else\r\n            document.getElementById(\"task-error\").innerHTML = \"\"\r\n\r\n        if (isValidDate()) {\r\n            document.getElementById(\"error-div\").innerHTML = \"Start date must be before End date\"\r\n            return\r\n        }\r\n        else {\r\n            document.getElementById(\"error-div\").innerHTML = \"\"\r\n        }\r\n        if (endYearSelect === '' || endMonthSelect === '' || endDaySelect === '') {\r\n            onAdd({ text, sDate: yearSelect + '-' + monthSelect + '-' + daySelect, eDate: yearSelect + '-' + monthSelect + '-' + daySelect, reminder })\r\n            return\r\n        }\r\n        onAdd({ text, sDate: yearSelect + '-' + monthSelect + '-' + daySelect, eDate: endYearSelect + '-' + endMonthSelect + '-' + endDaySelect, reminder })\r\n\r\n        setText('')\r\n        setMonthSelect(moment().clone().format(\"MM\"))\r\n        setDaySelect(moment().clone().format(\"DD\"))\r\n        setYearSelect(moment().clone().format(\"YYYY\"))\r\n        setEndMonthSelect('')\r\n        setEndDaySelect('')\r\n        setEndYearSelect('')\r\n        setReminder(false)\r\n    }\r\n\r\n    const [startDate, setStartDate] = useState(false)\r\n    const [endDate, setEndDate] = useState(false)\r\n    return (\r\n        <form className='new-task-form' onSubmit={onSubmit}>\r\n            <div className='form-control' >\r\n                <label>Task</label>\r\n                <input type='text' value={text} placeholder='Add New Task' onChange={(e) => setText(e.target.value)} />\r\n                <div id='task-error' style={{ color: \"red\" }}></div>\r\n            </div>\r\n            <div className='form-control'>\r\n                <div className=\"start-date\" style={startDate? {borderColor: 'salmon'} : {borderColor:\"\"}} onClick={()=>{setStartDate(!startDate); endDate? setEndDate(!endDate): setEndDate(endDate)}}>\r\n                    <label>\r\n                        <span>Start</span>\r\n                    </label>\r\n                    <select className='select-month' defaultValue={monthSelect ? monthSelect : 'none'} onChange={(e) => setMonthSelect(e.target.value)}>\r\n                        <option value=\"\">MONTH</option>\r\n                        {months.map(month => (<option key={month} value={month.format(\"MM\")}>{month.clone().format(\"MM\")}</option>))}\r\n                    </select>\r\n                    <select className='select-day' value={daySelect ? daySelect : 'none'} onChange={(e) => setDaySelect(e.target.value)}>\r\n                        <option value=\"\">DAY</option>\r\n                        {dates.map(day => (<option key={day} value={day.format(\"DD\")}>{day.format(\"DD\")}</option>))}\r\n                    </select>\r\n                    <select className='select-year' value={yearSelect ? yearSelect : 'none'} onChange={(e) => setYearSelect(e.target.value)}>\r\n                        <option value=\"\">YEAR</option>\r\n                        {selectYears.map(year => (<option key={year} value={year}>{year}</option>))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"end-date\" style={endDate? {borderColor: 'salmon'} : {borderColor:\"\"}} onClick={()=>{setEndDate(!endDate); startDate? setStartDate(!startDate): setStartDate(startDate)}}>\r\n                    <label>\r\n                        <span>End</span>\r\n                    </label>\r\n                    <select className='select-month' style={isValidDate() ? { textDecoration: \"line-through\", color: \"red\" } : { color: \"\" }} value={endMonthSelect ? endMonthSelect : 'none'} onChange={(e) => setEndMonthSelect(e.target.value)}>\r\n                        <option value=\"\">MONTH</option>\r\n                        {emonths.map(month => (<option key={month} value={month.format(\"MM\")}>{month.format(\"MM\")}</option>))}\r\n                    </select>\r\n                    <select className='select-day' style={isValidDate() ? { textDecoration: \"line-through\", color: \"red\" } : { color: \"\" }} value={endDaySelect ? endDaySelect : 'none'} onChange={(e) => setEndDaySelect(e.target.value)}>\r\n                        <option value=\"\">DAY</option>\r\n                        {edates.map(day => (<option key={day} value={day.format(\"DD\")}>{day.format(\"DD\")}</option>))}\r\n                    </select>\r\n                    <select className='select-year' style={isValidDate() ? { textDecoration: \"line-through\", color: \"red\" } : { color: \"\" }} value={endYearSelect ? endYearSelect : 'none'} onChange={(e) => setEndYearSelect(e.target.value)}>\r\n                        <option value=\"\">YEAR</option>\r\n                        {selectEYears.map(year => (<option key={year} value={year}>{year}</option>))}\r\n                    </select>\r\n                </div>\r\n                <div id=\"error-div\" style={{ color: 'red' }}></div>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n            <input type=\"submit\" value=\"Submit\" className=\"btn-block sub-btn\"></input>\r\n        </form>\r\n    )\r\n}\r\nexport default NewTask\r\n","import {useState} from 'react'\r\nimport Task from './Task'\r\nimport NewTask from './NewTask.js';\r\nimport './Task.css';\r\n\r\nconst Tasks =({tasks, setTasks, selectedDate, onDelete, onToggle})=> {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n    //add new task\r\n  const newTask = async (task)=> {\r\n    const res = await fetch(`http://localhost:5000/tasks`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type' : 'application/json'        \r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n    const data= await res.json()\r\n    setTasks([...tasks, data])\r\n  } \r\n  return (\r\n        <div className=\"task-container\">\r\n          <h2>Tasks</h2>\r\n          <button className=\"btn-add-task\" onClick={()=> setShowAddTask(!showAddTask)}>{showAddTask ? 'CLOSE': 'ADD'}</button>\r\n           {showAddTask && <NewTask tasks={tasks} selectedDate={selectedDate} onAdd={newTask} />}\r\n          <div></div>\r\n          <div className=\"tasks-box\">{tasks.length > 0 ? tasks.map((task)=> (\r\n                <Task key={task.id} taskL={task} selectedDate={selectedDate} onDelete={onDelete} onToggle={onToggle}/> \r\n            )\r\n          ) : \"No Tasks!\"}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Tasks","import React from 'react'\r\nimport './ExpBar.css'\r\n\r\nconst ExpBar = ({exp1}) => {\r\n    return (\r\n        <div className=\"exp-bar-2\">\r\n            <div className=\"exp-bar-1\" style={{width: `${exp1}%`}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpBar\r\n","import * as React from 'react'\r\nimport {motion} from 'framer-motion'\r\n\r\nfunction Sunny(props) {\r\n    \r\n    return (\r\n        <motion.svg id=\"Capa_1\" viewBox=\"0 0 512.459 512.459\"  xmlns=\"http://www.w3.org/2000/svg\" {...props}  initial=\"hidden\" animate=\"visible\"><g><g>\r\n            <path d=\"m256.23 111.849-28.617-46.236 28.617-65.383 75.209 74.833h106.04v106.04l74.98 74.98-74.98 74.98v106.04h-106.04l-75.209 75.127-24.788-61.851 24.788-49.915 125.601-165.761-.001-.004z\" fill=\"#ff7037\"/>\r\n            <path d=\"m256.23 111.849v-111.619l-75.21 74.833h-106.04v106.04l-74.98 74.98 74.98 74.98v106.04h106.04l75.21 75.127v-111.766l-125.601-165.761v-.004z\" fill=\"#ff9e22\"/></g><g>\r\n            <path d=\"m256.23 111.996-54.272 140.204 54.272 148.264c79.665 0 144.234-64.569 144.234-144.234s-64.569-144.234-144.234-144.234z\" fill=\"#ffb555\"/>\r\n            <path d=\"m256.23 111.996v288.468c-79.665 0-144.234-64.569-144.234-144.234s64.569-144.234 144.234-144.234z\" fill=\"#fd5\"/><g>\r\n            <path d=\"m415.46 256.23c0 87.8-71.43 159.23-159.23 159.23l-16.702-16.57 16.702-13.43c71.26 0 129.23-57.97 129.23-129.23s-57.97-129.23-129.23-129.23l-15.851-14.238 15.851-15.762c87.8 0 159.23 71.43 159.23 159.23z\" fill=\"#b30042\"/>\r\n            <path d=\"m127 256.23c0 71.26 57.97 129.23 129.23 129.23v30c-87.8 0-159.23-71.43-159.23-159.23s71.43-159.23 159.23-159.23v30c-71.26 0-129.23 57.97-129.23 129.23z\" fill=\"#e40058\"/></g></g></g>\r\n        \r\n        </motion.svg>\r\n\r\n    )\r\n}\r\n\r\nexport default Sunny\r\n","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport './FooterNav.css'\r\n\r\nexport const FooterNav = ({ onSwitch, onXChange, select, onSelect}) => {\r\n    function setToday() {\r\n        return moment();\r\n    }\r\n    const location = useLocation()\r\n \r\n    return (\r\n        <footer className=\"custom-element-bg\">\r\n            {\r\n                location.pathname === '/Calendar' && (\r\n                    <ul className=\"nav-links\">\r\n                        <li className=\"go-today\" onClick={()=> {onXChange(setToday()) ; onSwitch(setToday()); onSelect(moment().clone().format(\"YYYY-MM-DD\"))}}>\r\n                            Go to Today\r\n                        </li>\r\n                        <li>\r\n                            Day\r\n                        </li>\r\n                        <li>\r\n                            Week\r\n                        </li>\r\n                        <li>\r\n                            Month\r\n                        </li>\r\n                    </ul>\r\n                )}\r\n\r\n\r\n\r\n        </footer>\r\n\r\n    )\r\n}\r\n\r\nexport default FooterNav","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport buildCalendar from \"./buildCal\";\r\nimport Tasks from './Tasks.js';\r\nimport ExpBar from './ExpBar.js';\r\nimport Sunny from './Sunny.js';\r\n\r\nimport './Calendar.css'\r\nimport FooterNav from './FooterNav';\r\n\r\nconst Calendar = ({ value, onXChange }) => {\r\n    // Tasks Set-up\r\n    const [tasks, setTasks] = useState([])\r\n    useEffect(() => {\r\n        const getTasks = async () => {\r\n            const tasksFromServer = await fetchTasks()\r\n            setTasks(tasksFromServer)\r\n        }\r\n        getTasks()\r\n    }, [])\r\n    //fetch tasks\r\n    const fetchTasks = async () => {\r\n        const res = await fetch('http://localhost:5000/tasks')\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n    const fetchTask = async (id) => {\r\n        const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n    const deleteTask = async (id) => {\r\n        await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n    const toggleReminder = async (id) => {\r\n        const taskToToggle = await fetchTask(id)\r\n        const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n        const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(updTask)\r\n        })\r\n        const data = await res.json()\r\n        setTasks(tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task))\r\n    }\r\n    // Calendar Set-up\r\n    const [selectedDate, setSelectedDate] = useState(moment().format(\"YYYY-MM-DD\"))\r\n    const [calendar, setCalendar] = useState([])\r\n    const [miniCalendar, setMiniCalendar] = useState([])\r\n    const [val, setVal] = useState(moment())\r\n    const mon = [];\r\n    const firstMonth = value.clone().startOf(\"year\").month();\r\n    const lastMonth = value.clone().endOf(\"year\").month();\r\n    useEffect(() => {\r\n        setCalendar(buildCalendar(value));\r\n    }, [value])\r\n    useEffect(() => {\r\n        setMiniCalendar(buildCalendar(val));\r\n    }, [val])\r\n    function getMonthName() {\r\n        for (let i = firstMonth; i <= lastMonth; ++i)\r\n            mon.push(i)\r\n        return mon;\r\n    }\r\n    function currMonthName() {\r\n        return value.format(\"MMM\");\r\n    }\r\n    function currYear() {\r\n        return value.format(\"YYYY\");\r\n    }\r\n    function nextMonth() {\r\n        return value.clone().add(1, \"month\")\r\n    }\r\n    function prevMonth() {\r\n        return value.clone().subtract(1, \"month\")\r\n    }\r\n    function setMonthName(arg) {\r\n        return value.clone().month(arg)\r\n    }\r\n    // mini Calendar\r\n    function currSMonthName() {\r\n        return val.format(\"MMM\");\r\n    }\r\n    function currSYear() {\r\n        return val.format(\"YYYY\");\r\n    }\r\n    function nextSMonth() {\r\n        return val.clone().add(1, \"month\")\r\n    }\r\n    function prevSMonth() {\r\n        return val.clone().subtract(1, \"month\")\r\n    }\r\n    function nextSYear() {\r\n        return val.clone().add(1, \"year\")\r\n    }\r\n    function prevSYear() {\r\n        return val.clone().subtract(1, \"year\")\r\n    }\r\n    function setDate(year, month, date) {\r\n        return moment([year, month, date]).clone()\r\n    }\r\n    // Others\r\n    const showDate = (year, month, date) => {\r\n        setSelectedDate(moment([year, month, date]).clone().format(\"YYYY-MM-DD\"));\r\n    }\r\n    function isDayAfterStart(nameKey, myArray) {\r\n        for (var i = 0; i < myArray.length; i++) {\r\n            if (myArray[i].sDate <= nameKey && myArray[i].eDate >= nameKey) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    function getTaskName(nameKey, myArray) {\r\n        for (var i = 0; i < myArray.length; i++) {\r\n            if (myArray[i].sDate <= nameKey && myArray[i].eDate >= nameKey)\r\n                return <ul className=\"task-list\"><li>{myArray[i].text}</li></ul>\r\n        }\r\n    }\r\n    function countTasks(nameKey, myArray) {\r\n        let taskCount = -1;\r\n        for (var i = 0; i < myArray.length; i++) {\r\n            if (myArray[i].sDate <= nameKey && myArray[i].eDate >= nameKey)\r\n                taskCount++;\r\n        }\r\n        if (taskCount < 1)\r\n            return \"\";\r\n        else\r\n            return \"+ \" + taskCount + \" more\";\r\n    }\r\n\r\n    const svgVariants = {\r\n        hidden: { opacity: 0 },\r\n        visible: {\r\n            opacity: 1,\r\n            transition: { duration: 1 }\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"side-pan\">\r\n                <div className=\"date-select\">\r\n                    <div className=\"custom-element-bg s-current-month\">\r\n                        <h1>{currSMonthName()} {currSYear()} </h1>\r\n                        <i className=\"fa fa-angle-double-left\" aria-hidden=\"true\" onClick={() => setVal(prevSYear())}></i>\r\n                        <i className=\"fas fa-angle-left s-prev\" onClick={() => setVal(prevSMonth())}></i>\r\n                        <i className=\"fas fa-angle-right s-next\" onClick={() => setVal(nextSMonth())}></i>\r\n                        <i className=\"fa fa-angle-double-right\" aria-hidden=\"true\" onClick={() => setVal(nextSYear())}></i>\r\n                    </div>\r\n                    <div className=\"s-weekdays custom-element-bg\">\r\n                        <div>S</div>\r\n                        <div>M</div>\r\n                        <div>T</div>\r\n                        <div>W</div>\r\n                        <div>T</div>\r\n                        <div>F</div>\r\n                        <div>S</div>\r\n                    </div>\r\n                    {miniCalendar.map(week2 => <div key={week2} className=\"s-weeks\">{\r\n                        week2.map(day2 =>\r\n                            <div key={day2} className={selectedDate === day2.clone().format(\"YYYY-MM-DD\") ?\r\n                                (((day2.year() === moment().format(\"YYYY\")) && (day2.date() === moment().date()) && (day2.clone().month() === moment().month()))) ?\r\n                                    \"s-dates s-today s-selected-date\" : 's-dates s-selected-date' : (day2.year() === moment().year() && day2.date() === moment().date()) && (day2.clone().month() === moment().month()) ?\r\n                                    \"s-dates s-today\" : \"s-dates\"} onClick={() => { onXChange(setDate(day2.year(), day2.month(), day2.date())); showDate(day2.year(), day2.month(), day2.date()) }}>\r\n                                <div >{day2.clone().format(\"D\").toString()} </div>\r\n                            </div>)\r\n                    }\r\n                    </div>)}\r\n                </div>\r\n\r\n                <Tasks tasks={tasks} setTasks={setTasks} selectedDate={selectedDate} onDelete={deleteTask} onToggle={toggleReminder} /> \r\n            </div>\r\n            <div className=\"calendar\">\r\n                <div className=\"month-select\">\r\n                    {getMonthName().map(mons =>\r\n                        <div key={mons} className={value.isSame(value.clone().month(mons), \"month\") ? \"selected-month\" : \"unselected-months\"} onClick={() => onXChange(setMonthName(mons))}>\r\n                            {moment().month(mons).format(\"MMM\")}\r\n                        </div>)}\r\n                </div>\r\n                <div className=\"month\">\r\n                    <div className=\"custom-element-bg current-month\">\r\n                        <i className=\"fas fa-angle-left prev\" onClick={() => onXChange(prevMonth())}></i>\r\n                        <h1>{currMonthName()} {currYear()} </h1>\r\n                        <i className=\"fas fa-angle-right next\" onClick={() => onXChange(nextMonth())}></i>\r\n                    </div>\r\n                    <div className=\"weekdays custom-element-bg\">\r\n                        <div>SUN</div>\r\n                        <div>MON</div>\r\n                        <div>TUE</div>\r\n                        <div>WED</div>\r\n                        <div>THU</div>\r\n                        <div>FRI</div>\r\n                        <div>SAT</div>\r\n                    </div>\r\n                    {calendar.map(week => <div key={week} className=\"weeks\">{\r\n                        week.map(day =>\r\n                            <div key={day}\r\n                                className={(!(day.clone().month() === value.clone().month())) ?\r\n                                    \"fill-days\" : selectedDate === day.clone().format(\"YYYY-MM-DD\") ? 'dates selected-date' : (day.year() === moment().year() && day.date() === moment().date()) && (day.clone().month() === moment().month()) ?\r\n                                            \"dates today custom-element-bg\" : \"dates\"}\r\n                                onClick={(() => (((day.clone().month() === value.clone().month())) ? (showDate(day.year(), day.month(), day.date())) : \"\"))}>\r\n                                <div >\r\n                                    {day.clone().format(\"D\").toString()}\r\n                                    &nbsp;&nbsp;\r\n                                    <Sunny variants={svgVariants} visibility={isDayAfterStart(day.format(\"YYYY-MM-DD\").toString(), tasks) ? 'true' : 'hidden'} height={'14px'} />\r\n                                </div>\r\n                                {getTaskName(day.format(\"YYYY-MM-DD\").toString(), tasks)}{countTasks(day.format(\"YYYY-MM-DD\").toString(), tasks)}\r\n                            </div>)\r\n                    }\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n            <FooterNav onSwitch={setVal} onXChange={onXChange} select={selectedDate} onSelect={setSelectedDate}/>\r\n            <ExpBar />\r\n        </div>\r\n    )\r\n}\r\nexport default Calendar\r\n","export const About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n            <h4>Version 1.0.0</h4>\r\n        </div>\r\n    )\r\n}\r\nexport default About","import React from 'react'\r\nimport './home.css';\r\n\r\nexport const Home = () => {\r\n \r\n    return (\r\n        <div>\r\n            <canvas height=\"720\" width=\"1280\" style={{position:\"absolute\", left:\"1rem\", top:\"4rem\",border:\"1px solid rgb(255, 216, 157)\"}}></canvas>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useState } from 'react'\r\nimport {  BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport Calendar from './components/Calendar.js';\r\nimport About from './components/About.js';\r\nimport Home from './components/Home.js';\r\nimport './style.css';\r\n\r\nconst App = () => {\r\n \r\n    const [value, setValue] = useState(moment());\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <link\r\n                    rel=\"stylesheet\"\r\n                    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"\r\n                />\r\n                <nav className=\"custom-element-bg\">\r\n                    <div className=\"logo\">\r\n                        <h4>HARRY J</h4>\r\n                    </div>\r\n                    <ul className=\"nav-links\" >\r\n                        <li>\r\n                            <Link to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Calendar\">Calendar</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Projects\">Projects</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/About\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n               \r\n                </nav>\r\n                <Route path='/Calendar' \r\n                render={(props) => (\r\n                    <>\r\n                    {<Calendar value={value} onXChange={setValue} />}\r\n                    </>\r\n                )}/>\r\n                <Route path='/About' component={About} />\r\n                <Route path='/' exact component={Home} />\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}