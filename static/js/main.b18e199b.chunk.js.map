{"version":3,"sources":["components/Task.js","components/Tasks.js","components/Calendar.js","components/buildCal.js","App.js","reportWebVitals.js","index.js"],"names":["Task","taskL","onDelete","onToggle","className","onDoubleClick","id","text","style","color","justifyItems","cursor","onClick","Tasks","tasks","startDate","sDate","length","map","task","moment","clone","format","type","value","disabled","Calendar","onChange","useState","priority","exp","reminder","setTasks","eDate","setStartDate","calendar","setCalendar","useEffect","startDay","startOf","endDay","endOf","day","subtract","end","date","iendDay","add","isBefore","push","Array","fill","weekNum","month","buildCalendar","mon","firstMonth","lastMonth","i","getMonthName","mons","isSame","arg","week","year","selectedDate","currDate","toString","showDate","filter","App","styleRef","useRef","setValue","rel","href","ref","current","classList","toggle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b18e199b.chunk.js","sourcesContent":["import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({taskL, onDelete, onToggle}) => {\r\n    return (\r\n        <div className='task' onDoubleClick={()=> onToggle(taskL.id)}>\r\n            <h3>{taskL.text} <FaTimes style={{ color: 'red', justifyItems: 'right', cursor: 'pointer'}} onClick={()=>onDelete(taskL.id)}/></h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Task\r\n","import Task from './Task'\r\nimport moment from 'moment'\r\nimport './Task.css';\r\n\r\nconst Tasks =({tasks, startDate, onDelete, onToggle})=> {\r\n    return (\r\n        <div className=\"task-container\">\r\n          <h2> Date: {startDate.sDate} </h2>\r\n          <div>{tasks.length > 0 ? tasks.map((task)=> (\r\n                <Task key={task.id} taskL={task} startDate={startDate} onDelete={onDelete} onToggle={onToggle}/>\r\n            )\r\n          ) : \"No Tasks!\"}</div>\r\n          {(startDate.sDate >= moment().clone().format(\"YYYY-MM-DD\")) ? <input type=\"button\" value=\"Submit\"className=\"sub-btn\"></input> : <input type=\"button\" value=\"Submit\" className=\"sub-btn\" disabled></input>}\r\n        </div>\r\n    )\r\n}\r\nexport default Tasks\r\n","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport buildCalendar from \"./buildCal\";\r\nimport Tasks from './Tasks.js';\r\nimport './Calendar.css'\r\n\r\nconst Calendar = ({ value, onChange }) => {\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            id: 1,\r\n            text: 'Doctors Appointment',\r\n            priority: 5,\r\n            exp: 10,\r\n            sDate: 'test',\r\n            reminder: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            text: 'Homework',\r\n            priority: 4,\r\n            exp: 8,\r\n            sDate: 'test',\r\n            reminder: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            text: 'Cook',\r\n            priority: 3,\r\n            exp: 6,\r\n            sDate: 'test',\r\n            reminder: true,\r\n        }\r\n    ])\r\n    const [startDate, setStartDate] = useState( [\r\n        {   id: 1,\r\n            sDate: '',\r\n            eDate: '',\r\n        },\r\n        {   id: 2,\r\n            sDate: '',\r\n            eDate: '',\r\n        },\r\n        {   id: 3,\r\n            sDate: '',\r\n            eDate: '',\r\n        }\r\n\r\n    ])\r\n    const [calendar, setCalendar] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setCalendar(buildCalendar(value));\r\n    }, [value])\r\n\r\n    const mon = [];\r\n    const firstMonth = value.clone().startOf(\"year\").month();\r\n    const lastMonth = value.clone().endOf(\"year\").month();\r\n    function getMonthName() {\r\n        for (let i = firstMonth; i <= lastMonth; ++i)\r\n            mon.push(i)\r\n        return mon;\r\n    }\r\n    function currMonthName() {\r\n        return value.format(\"MMM\");\r\n    }\r\n    function currYear() {\r\n        return value.format(\"YYYY\");\r\n    }\r\n    function nextMonth() {\r\n        return value.clone().add(1, \"month\")\r\n    }\r\n    function prevMonth() {\r\n        return value.clone().subtract(1, \"month\")\r\n    }\r\n    function setMonthName(arg) {\r\n        return value.clone().month(arg)\r\n    }\r\n\r\n    const showDate = (year, month, selectedDate) => {\r\n        const currDate = [startDate];\r\n        var day = moment([year, month, selectedDate]).format(\"YYYY-MM-DD\")\r\n        currDate.sDate = day.toString()\r\n\r\n        tasks.map((task)=> task.sDate = currDate.sDate)\r\n\r\n\r\n        setStartDate(currDate);\r\n    }\r\n    const deleteTask = (id) => {\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n\r\n    const toggleReminder = (id) => {\r\n        setTasks(tasks.map((task)=> task.id === id ? {...task, reminder: !task.reminder} : task) )\r\n    }\r\n    return (\r\n        \r\n        <div className=\"wrapper\">\r\n            <div className=\"calendar\">\r\n                <div className=\"month-select\">\r\n                    {getMonthName().map(mons =>\r\n                        <div key={mons} className={value.isSame(value.clone().month(mons), \"month\") ? \"selected-month\" : \"unselected-months\"} onClick={() => onChange(setMonthName(mons))}>\r\n                            {moment().month(mons).format(\"MMM\")}\r\n                        </div>)}\r\n                </div>\r\n                <div className=\"month\">\r\n                    <div className=\"custom-element-bg current-month\">\r\n                        <i className=\"fas fa-angle-left prev\" onClick={() => onChange(prevMonth())}></i>\r\n                            <h1>{currMonthName()} {currYear()} </h1>\r\n                        <i className=\"fas fa-angle-right next\" onClick={() => onChange(nextMonth())}></i>\r\n                    </div>\r\n                    <div className=\"weekdays custom-element-bg\">\r\n                        <div>SUN</div>\r\n                        <div>MON</div>\r\n                        <div>TUE</div>\r\n                        <div>WED</div>\r\n                        <div>THU</div>\r\n                        <div>FRI</div>\r\n                        <div>SAT</div>\r\n                    </div>\r\n                        {calendar.map(week => <div key={week.toString()} className=\"weeks\">{\r\n                            week.map(day => <div key={day} className={(!(day.clone().month() === value.clone().month())) ? \"fill-days \" : (((day.year()=== moment().year())&&(day.date()=== moment().date()) && (value.clone().month() === moment().month()))) ? \"dates today custom-element-bg\" : \"dates\"} onClick={() => showDate(day.year(), day.month(), day.date())}>\r\n                                <div> {day.clone().format(\"D\").toString()} </div>\r\n                            </div>)\r\n                        }\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n          <Tasks tasks={tasks} startDate={startDate} onDelete={deleteTask} onToggle={toggleReminder}/> \r\n        </div>\r\n    )\r\n}\r\nexport default Calendar\r\n","export default function buildCalendar(value) {\r\n    const startDay = value.clone().startOf(\"month\").startOf(\"week\");\r\n    var endDay = value.clone().endOf(\"month\").endOf(\"week\");\r\n    const day = startDay.clone().subtract(1, \"day\");\r\n    const calendar = [];\r\n    const totalWeekRows = 6;\r\n    const end = endDay.date();\r\n    function iendDay (end) {\r\n        return endDay.add(end, \"day\");\r\n    }\r\n        while (day.isBefore(endDay, \"day\")) {\r\n            calendar.push(\r\n                Array(7).fill(0).map(() => day.add(1, \"day\").clone())\r\n            );\r\n            //Fill the gap in the panel (Panel can hold a total of 6 rows)\r\n            const weekNum = calendar.length;\r\n            let weekDays = 7;\r\n            if(end === day.date() && endDay.month() === day.month() && weekNum < totalWeekRows) {\r\n                let rowsToFill =  totalWeekRows - weekNum;\r\n                iendDay(rowsToFill * weekDays);\r\n            }\r\n        }\r\n        return calendar;\r\n}\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport moment from 'moment'\r\nimport Calendar from './components/Calendar.js';\r\nimport './style.css';\r\n\r\nconst App = () => {\r\n    const styleRef = useRef();\r\n    function translate() {\r\n        styleRef.current.classList.toggle('nav-active');\r\n    }\r\n    const [value, setValue] = useState(moment());\r\n    return (\r\n        <div className=\"App\">\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"\r\n            />\r\n                    <nav className=\"custom-element-bg\">\r\n                        <div className=\"logo\">\r\n                            <h4>HARRY J</h4>\r\n                        </div>\r\n                        <ul className=\"nav-links\" ref={styleRef}>\r\n                            <li>\r\n                                <a href=\"/#\">Home</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Calendar</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Projects</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">About</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"burger\" onClick={translate}>\r\n                            <div className=\"line1\"></div>\r\n                            <div className=\"line2\"></div>\r\n                            <div className=\"line3\"></div>\r\n                        </div>\r\n                    </nav>\r\n                        <Calendar value={value} onChange={setValue}/>\r\n                    </div>\r\n        );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}