{"version":3,"sources":["components/Task.js","components/NewTask.js","components/Tasks.js","components/ExpBar.js","components/Sunny.js","components/Calendar.js","components/buildCal.js","components/About.js","components/FooterNav.js","App.js","reportWebVitals.js","index.js"],"names":["Task","taskL","onDelete","onToggle","className","reminder","onDoubleClick","id","text","style","color","justifyItems","cursor","onClick","sDate","eDate","NewTask","onAdd","useState","setText","moment","clone","format","monthSelect","setMonthSelect","daySelect","setDaySelect","yearSelect","setYearSelect","endMonthSelect","setEndMonthSelect","endDaySelect","setEndDaySelect","endYearSelect","setEndYearSelect","setReminder","startYear","year","endYear","selectYears","selectEYears","push","startMonth","startOf","endMonth","endOf","startEMonth","endEMonth","mon","subtract","monE","months","emonths","isBefore","add","startEDay","lastEDay","test","dates","startEDay2","lastEDay2","test2","edates","selectStartHour","k","selectStartMinute","isValidDate","onSubmit","e","preventDefault","document","getElementById","innerHTML","type","value","placeholder","onChange","target","defaultValue","map","month","day","hour","index","textDecoration","checked","currentTarget","Tasks","tasks","setTasks","startDate","showAddTask","setShowAddTask","newTask","task","a","fetch","method","headers","body","JSON","stringify","res","json","data","length","ExpBar","Sunny","props","svg","viewBox","xmlns","initial","animate","d","fill","Calendar","onXChange","useEffect","fetchTasks","tasksFromServer","getTasks","fetchTask","setStartDate","deleteTask","filter","toggleReminder","taskToToggle","updTask","calendar","setCalendar","firstMonth","lastMonth","startDay","endDay","end","date","iendDay","Array","weekNum","buildCalendar","isDayAfterStart","nameKey","myArray","i","getTaskIndex","countTaskIndex","taskCount","svgVariants","hidden","rotate","opacity","visible","transition","duration","getMonthName","mons","isSame","arg","week","toString","variants","visibility","height","About","FooterNav","location","useLocation","pathname","App","styleRef","useRef","setValue","rel","href","ref","to","current","classList","toggle","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM"],"mappings":"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","file":"static/js/main.97ec7af7.chunk.js","sourcesContent":["import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({taskL, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${taskL.reminder ? 'reminder' : ''}`} onDoubleClick={()=> onToggle(taskL.id)}>\r\n            <h3>{taskL.text}  <FaTimes style={{ color: 'red', justifyItems: 'right', cursor: 'pointer'}} onClick={()=>onDelete(taskL.id)}/></h3>\r\n            <p>Starts: {taskL.sDate}</p>\r\n            <p>Ends: {taskL.eDate}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Task\r\n","import React, { useState } from 'react'\r\nimport moment from 'moment'\r\nimport './Task.css';\r\n\r\nconst NewTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [monthSelect, setMonthSelect] = useState(moment().clone().format(\"MM\"))\r\n    const [daySelect, setDaySelect] = useState(moment().clone().format(\"DD\"))\r\n    const [yearSelect, setYearSelect] = useState(moment().clone().format(\"YYYY\"))\r\n    const [endMonthSelect, setEndMonthSelect] = useState(moment().clone().format(\"MM\"))\r\n    const [endDaySelect, setEndDaySelect] = useState(moment().clone().format(\"DD\"))\r\n    const [endYearSelect, setEndYearSelect] = useState(moment().clone().format(\"YYYY\"))\r\n    const [reminder, setReminder] = useState(false)\r\n    //year drop down\r\n    var startYear = moment().clone().year()\r\n    const endYear = moment().clone().year() + 10\r\n    const selectYears = [];\r\n    const selectEYears = [];\r\n    while (startYear <= endYear) {\r\n        selectYears.push(startYear)\r\n        selectEYears.push(startYear)\r\n        startYear++;\r\n    }\r\n    //month drop down\r\n    const startMonth = moment().clone().startOf(\"year\")\r\n    const endMonth = moment().clone().endOf(\"year\")\r\n    const startEMonth = moment().clone().startOf(\"year\")\r\n    const endEMonth = moment().clone().endOf(\"year\")\r\n    const mon = startMonth.subtract(1, \"month\")\r\n    const monE = startEMonth.subtract(1, \"month\")\r\n    const months = [];\r\n    const emonths = [];\r\n    while (startMonth.isBefore(endMonth, \"month\")) {\r\n        months.push(mon.add(1, \"month\").clone())\r\n    }\r\n    while (startEMonth.isBefore(endEMonth, \"month\")) {\r\n        emonths.push(monE.add(1, \"month\").clone())\r\n    }\r\n    //day drop down\r\n    const startEDay = moment(yearSelect + '-' + monthSelect, \"YYYY-MM\").clone().startOf(\"month\");\r\n    const lastEDay = moment(yearSelect + '-' + monthSelect, \"YYYY-MM\").clone().endOf(\"month\");\r\n    const test = startEDay.subtract(1,\"day\")\r\n    const dates =[];\r\n    while(startEDay.isBefore(lastEDay, \"day\")) {\r\n        dates.push(test.add(1,\"day\").clone())\r\n    }\r\n    const startEDay2 = moment(endYearSelect + '-' + endMonthSelect, \"YYYY-MM\").clone().startOf(\"month\");\r\n    const lastEDay2 = moment(endYearSelect + '-' + endMonthSelect, \"YYYY-MM\").clone().endOf(\"month\");\r\n    const test2 = startEDay2.subtract(1,\"day\")\r\n    const edates =[]\r\n    while(startEDay2.isBefore(lastEDay2, \"day\")) {\r\n        edates.push(test2.add(1,\"day\").clone())\r\n    }\r\n    //time drop down\r\n    const selectStartHour = []\r\n    for(let k =1; k <= 12; ++k) {\r\n            selectStartHour.push(moment(k, \"hh\").clone())\r\n    }\r\n    const selectStartMinute = []\r\n    for(let k = 0; k <= 59; ++k) {\r\n        if(k <= 9) {\r\n            selectStartMinute.push(moment('0'+ k, \"mm\").clone())\r\n        }\r\n        else {\r\n            selectStartMinute.push(moment(k, \"mm\").clone())\r\n\r\n        }\r\n    }\r\n    function isValidDate() {\r\n     \r\n      if( moment(yearSelect + '-' + monthSelect +'-' + daySelect, \"YYYY-MM-DD\") > moment(endYearSelect + '-' + endMonthSelect +'-' + endDaySelect, \"YYYY-MM-DD\") )\r\n       {\r\n           return true;\r\n       }\r\n        return false;\r\n    }\r\n    const onSubmit =(e)=> {\r\n        e.preventDefault()\r\n        if(!text) {\r\n            document.getElementById(\"task-error\").innerHTML = \"Please enter a task name\"\r\n            return\r\n        }\r\n        else\r\n        document.getElementById(\"task-error\").innerHTML = \"\"\r\n        \r\n        if(isValidDate())\r\n        {\r\n            document.getElementById(\"error-div\").innerHTML = \"Start date must be before End date\"\r\n            return\r\n        }\r\n        else {\r\n            document.getElementById(\"error-div\").innerHTML = \"\"\r\n        }\r\n        if(endYearSelect==='' || endMonthSelect==='' || endDaySelect==='') {\r\n            onAdd({text, sDate: yearSelect + '-' + monthSelect + '-' + daySelect,  eDate: yearSelect + '-' + monthSelect + '-' + daySelect, reminder})\r\n            return\r\n        }\r\n        onAdd({text, sDate: yearSelect + '-' + monthSelect + '-' + daySelect,  eDate: endYearSelect + '-' + endMonthSelect + '-' + endDaySelect, reminder})\r\n\r\n        setText('')\r\n        setMonthSelect(moment().clone().format(\"MM\"))\r\n        setDaySelect(moment().clone().format(\"DD\"))\r\n        setYearSelect(moment().clone().format(\"YYYY\"))\r\n        setEndMonthSelect('')\r\n        setEndDaySelect('')\r\n        setEndYearSelect('')\r\n        setReminder(false)\r\n    }\r\n    return (\r\n            <form className='new-task-form' onSubmit={onSubmit}>\r\n                <div className='form-control' >\r\n                    <label>Task</label>\r\n                    <input type='text' value={text} placeholder='Add New Task' onChange={(e)=>setText(e.target.value)}/>\r\n                    <div id='task-error' style={{color:\"red\"}}></div>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label>\r\n                        <span>Start</span>\r\n                    </label>\r\n                    <select className='select-month' defaultValue={monthSelect? monthSelect: 'none'} onChange={(e)=> setMonthSelect(e.target.value)}>\r\n                        <option value=\"\">MONTH</option>\r\n                        {months.map(month => (<option key={month} value={month.format(\"MM\")}>{month.clone().format(\"MM\")}</option>))}\r\n                    </select>\r\n                    <select className='select-day' value={daySelect? daySelect: 'none'} onChange={(e)=> setDaySelect(e.target.value)}>\r\n                    <option value=\"\">DAY</option>\r\n                        {dates.map(day => (<option key={day} value={day.format(\"DD\")}>{day.format(\"DD\")}</option>))}\r\n                    </select>\r\n                    <select className='select-year' value={yearSelect? yearSelect: 'none'} onChange={(e)=> setYearSelect(e.target.value)}>\r\n                    <option value=\"\">YEAR</option>\r\n                       {selectYears.map(year => (<option key={year} value={year}>{year}</option>))}\r\n                    </select>\r\n                    <select className='select-hour' >\r\n                        {selectStartHour.map((hour,index) => <option key={index} value={hour}>{hour.format(\"hh\")}</option>)}\r\n                    </select>\r\n                    <label>\r\n                        <span>End</span>\r\n                    </label>\r\n                    <select className='select-month' style={isValidDate()? {textDecoration: \"line-through\", color: \"red\"} : {color:\"\"}} value={endMonthSelect? endMonthSelect: 'none'} onChange={(e)=> setEndMonthSelect(e.target.value)}>\r\n                    <option value=\"\">MONTH</option>\r\n                        {emonths.map(month => (<option key={month} value={month.format(\"MM\")}>{month.format(\"MM\")}</option>))}\r\n                    </select>\r\n                    <select className='select-day' style={isValidDate()? {textDecoration: \"line-through\", color: \"red\"} : {color:\"\"}} value={endDaySelect? endDaySelect: 'none'} onChange={(e)=> setEndDaySelect(e.target.value)}>\r\n                    <option value=\"\">DAY</option>\r\n                        {edates.map(day => (<option key={day} value={day.format(\"DD\")}>{day.format(\"DD\")}</option>))}\r\n                    </select>\r\n                    <select className='select-year' style={isValidDate()? {textDecoration: \"line-through\", color: \"red\"} : {color:\"\"}} value={endYearSelect? endYearSelect: 'none'}  onChange={(e)=> setEndYearSelect(e.target.value)}>\r\n                    <option value=\"\">YEAR</option>\r\n                       {selectEYears.map(year => (<option key={year} value={year}>{year}</option>))}\r\n                    </select>\r\n                    <div id=\"error-div\" style={{color: 'red'}}></div>\r\n                </div>\r\n                <div className='form-control form-control-check'>\r\n                    <label>Set Reminder</label>\r\n                    <input type='checkbox' checked={reminder} value={reminder} onChange={(e)=> setReminder(e.currentTarget.checked)}/>\r\n                </div>\r\n                <input type=\"submit\" value=\"Submit\" className=\"btn-block sub-btn\"></input>\r\n            </form>\r\n    )\r\n}\r\nexport default NewTask\r\n","import {useState} from 'react'\r\nimport Task from './Task'\r\nimport NewTask from './NewTask.js';\r\nimport './Task.css';\r\n\r\nconst Tasks =({tasks, setTasks, startDate, onDelete, onToggle})=> {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n    //add new task\r\n  const newTask = async (task)=> {\r\n    const res = await fetch(`http://localhost:5000/tasks`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type' : 'application/json'        \r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n    const data= await res.json()\r\n    setTasks([...tasks, data])\r\n  } \r\n  return (\r\n        <div className=\"task-container\">\r\n          <h2>Tasks</h2>\r\n          <button className=\"btn-add-task\" onClick={()=> setShowAddTask(!showAddTask)}>{showAddTask ? 'CLOSE': 'ADD'}</button>\r\n           {showAddTask && <NewTask tasks={tasks} startDate={startDate} onAdd={newTask} />}\r\n       \r\n          <div>{tasks.length > 0 ? tasks.map((task)=> (\r\n                <Task key={task.id} taskL={task} startDate={startDate} onDelete={onDelete} onToggle={onToggle}/>\r\n            )\r\n          ) : \"No Tasks!\"}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Tasks","import React from 'react'\r\nimport './ExpBar.css'\r\n\r\nconst ExpBar = (id) => {\r\n    return (\r\n        <div className={\"exp-bar-\" + id.id}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ExpBar\r\n","import * as React from 'react'\r\nimport {motion} from 'framer-motion'\r\n\r\nfunction Sunny(props) {\r\n    \r\n    return (\r\n        <motion.svg id=\"Capa_1\" viewBox=\"0 0 512.459 512.459\"  xmlns=\"http://www.w3.org/2000/svg\" {...props}  initial=\"hidden\" animate=\"visible\"><g><g>\r\n            <path d=\"m256.23 111.849-28.617-46.236 28.617-65.383 75.209 74.833h106.04v106.04l74.98 74.98-74.98 74.98v106.04h-106.04l-75.209 75.127-24.788-61.851 24.788-49.915 125.601-165.761-.001-.004z\" fill=\"#ff7037\"/>\r\n            <path d=\"m256.23 111.849v-111.619l-75.21 74.833h-106.04v106.04l-74.98 74.98 74.98 74.98v106.04h106.04l75.21 75.127v-111.766l-125.601-165.761v-.004z\" fill=\"#ff9e22\"/></g><g>\r\n            <path d=\"m256.23 111.996-54.272 140.204 54.272 148.264c79.665 0 144.234-64.569 144.234-144.234s-64.569-144.234-144.234-144.234z\" fill=\"#ffb555\"/>\r\n            <path d=\"m256.23 111.996v288.468c-79.665 0-144.234-64.569-144.234-144.234s64.569-144.234 144.234-144.234z\" fill=\"#fd5\"/><g>\r\n            <path d=\"m415.46 256.23c0 87.8-71.43 159.23-159.23 159.23l-16.702-16.57 16.702-13.43c71.26 0 129.23-57.97 129.23-129.23s-57.97-129.23-129.23-129.23l-15.851-14.238 15.851-15.762c87.8 0 159.23 71.43 159.23 159.23z\" fill=\"#b30042\"/>\r\n            <path d=\"m127 256.23c0 71.26 57.97 129.23 129.23 129.23v30c-87.8 0-159.23-71.43-159.23-159.23s71.43-159.23 159.23-159.23v30c-71.26 0-129.23 57.97-129.23 129.23z\" fill=\"#e40058\"/></g></g></g>\r\n        \r\n        </motion.svg>\r\n\r\n    )\r\n}\r\n\r\nexport default Sunny\r\n","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport buildCalendar from \"./buildCal\";\r\nimport Tasks from './Tasks.js';\r\nimport ExpBar from './ExpBar.js';\r\nimport Sunny from './Sunny.js';\r\nimport './Calendar.css'\r\n\r\nconst Calendar = ({ value, onXChange }) => {\r\n    // Tasks Set-up\r\n    const [tasks, setTasks] = useState([])\r\n    useEffect(()=>{\r\n        const getTasks = async ()=> {\r\n            const tasksFromServer = await fetchTasks()\r\n            setTasks(tasksFromServer)\r\n        }\r\n        getTasks()\r\n    }, [])\r\n    //fetch tasks\r\n    const fetchTasks = async () => {\r\n        const res = await fetch('http://localhost:5000/tasks')\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n    const fetchTask = async (id) => {\r\n        const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n        const data = await res.json()\r\n        return data\r\n    }\r\n    const [startDate, setStartDate] = useState(moment().format(\"YYYY-MM-DD\"))\r\n    const deleteTask = async (id) => {\r\n        await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n    const toggleReminder = async (id) => {\r\n        const taskToToggle = await fetchTask(id)\r\n        const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\r\n        const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(updTask)\r\n        })\r\n        const data = await res.json()\r\n        setTasks(tasks.map((task)=> task.id === id ? {...task, reminder: data.reminder} : task) )\r\n    }\r\n    // Calendar Set-up\r\n    const [calendar, setCalendar] = useState([])\r\n    const mon = [];\r\n    const firstMonth = value.clone().startOf(\"year\").month();\r\n    const lastMonth = value.clone().endOf(\"year\").month();\r\n    useEffect(() => {\r\n        setStartDate(moment().format(\"YYYY-MM-DD\"))\r\n        setCalendar(buildCalendar(value));\r\n    }, [value])\r\n    function getMonthName() {\r\n        for (let i = firstMonth; i <= lastMonth; ++i)\r\n            mon.push(i)\r\n        return mon;\r\n    }\r\n    function currMonthName() {\r\n        return value.format(\"MMM\");\r\n    }\r\n    function currYear() {\r\n        return value.format(\"YYYY\");  \r\n    }\r\n    function nextMonth() {\r\n        return value.clone().add(1, \"month\")\r\n    }\r\n    function prevMonth() {\r\n        return value.clone().subtract(1, \"month\")\r\n    }\r\n    function setMonthName(arg) {\r\n        return value.clone().month(arg)\r\n    }\r\n    const showDate = (year, month, date) => {\r\n        setStartDate(moment([year, month, date]).format(\"YYYY-MM-DD\").toString());\r\n    }\r\n    function isDayAfterStart(nameKey, myArray) {\r\n        for (var i = 0; i < myArray.length; i++) {\r\n            if(myArray[i].sDate <= nameKey && myArray[i].eDate >= nameKey)\r\n                return true;\r\n        }\r\n    }\r\n    function getTaskIndex(nameKey, myArray) {\r\n        for (var i = 0; i < myArray.length; i++) {\r\n            if(myArray[i].sDate <= nameKey && myArray[i].eDate >= nameKey)\r\n                return myArray[i].text;\r\n        }\r\n    }\r\n    function countTaskIndex(nameKey, myArray) {\r\n        let taskCount =-1;\r\n        for (var i = 0; i < myArray.length; i++) {\r\n            if(myArray[i].sDate <= nameKey && myArray[i].eDate >= nameKey)\r\n                taskCount++;\r\n        }\r\n        if (taskCount < 1)\r\n            return \"\";\r\n        else\r\n            return \"+ \" + taskCount + \" more\";\r\n    }\r\n    const svgVariants = {\r\n        hidden: { rotate: -180,\r\n        opacity: 0},\r\n        visible:  {\r\n            rotate: 0,\r\n            opacity: 1,\r\n            transition: { duration: 1}\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"calendar\">\r\n                <div className=\"month-select\">\r\n                    {getMonthName().map(mons =>\r\n                        <div key={mons} className={value.isSame(value.clone().month(mons), \"month\") ? \"selected-month\" : \"unselected-months\"} onClick={() => onXChange(setMonthName(mons))}>\r\n                            {moment().month(mons).format(\"MMM\")}\r\n                        </div>)}\r\n                </div>\r\n                <div className=\"month\">\r\n                    <div className=\"custom-element-bg current-month\">\r\n                        <i className=\"fas fa-angle-left prev\" onClick={() => onXChange(prevMonth())}></i>\r\n                            <h1>{currMonthName()} {currYear()} </h1>\r\n                        <i className=\"fas fa-angle-right next\" onClick={() => onXChange(nextMonth())}></i>\r\n                    </div>\r\n                    <div className=\"weekdays custom-element-bg\">\r\n                        <div>SUN</div>\r\n                        <div>MON</div>\r\n                        <div>TUE</div>\r\n                        <div>WED</div>\r\n                        <div>THU</div>\r\n                        <div>FRI</div>\r\n                        <div>SAT</div>\r\n                    </div>\r\n                        {calendar.map(week => <div key={week} className=\"weeks\">{\r\n                            week.map(day => \r\n                            <div key={day} \r\n                                className={(!(day.clone().month() === value.clone().month())) ? \r\n                                    \"fill-days\" : startDate === day.clone().format(\"YYYY-MM-DD\") ? \r\n                                    (((day.year() === moment().format(\"YYYY\"))&&(day.date()=== moment().date()) && (day.clone().month() === moment().month()))) ? \r\n                                    \"dates today custom-element-bg selected-date \" : 'dates selected-date' : (day.year() === moment().year() && day.date()=== moment().date()) && (day.clone().month() === moment().month()) ?\r\n                                    \"dates today custom-element-bg\" : \"dates\" } \r\n                                    onClick={(() => ((day.clone().month() === value.clone().month())) ? showDate(day.year(), day.month(), day.date()): \"\")}>\r\n                                <div>{day.clone().format(\"D\").toString()} <Sunny variants ={svgVariants} visibility={isDayAfterStart(day.format(\"YYYY-MM-DD\").toString(), tasks)? 'true' : 'hidden'} height={'14px'} /></div> {getTaskIndex(day.format(\"YYYY-MM-DD\").toString(), tasks)}<p> {countTaskIndex(day.format(\"YYYY-MM-DD\").toString(), tasks)}</p>\r\n                            </div>)\r\n                        }\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n          <Tasks tasks={tasks} setTasks={setTasks} startDate={startDate} onDelete={deleteTask} onToggle={toggleReminder}/> \r\n          <ExpBar id={2}/>\r\n          <ExpBar id={1}/>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Calendar\r\n","export default function buildCalendar(value) {\r\n    const startDay = value.clone().startOf(\"month\").startOf(\"week\");\r\n    const endDay = value.clone().endOf(\"month\").endOf(\"week\");\r\n    const day = startDay.clone().subtract(1, \"day\");\r\n    const calendar = [];\r\n    const totalWeekRows = 6;\r\n    const end = endDay.date();\r\n    function iendDay (end) {\r\n        return endDay.add(end, \"day\");\r\n    }\r\n        while (day.isBefore(endDay, \"day\")) {\r\n            calendar.push(\r\n                Array(7).fill(0).map(() => day.add(1, \"day\").clone())\r\n            );\r\n            //Fill the gap in the panel (Panel can hold a total of 6 rows)\r\n            const weekNum = calendar.length;\r\n            let weekDays = 7;\r\n            if(end === day.date() && endDay.month() === day.month() && weekNum < totalWeekRows) {\r\n                let rowsToFill =  totalWeekRows - weekNum;\r\n                iendDay(rowsToFill * weekDays);\r\n            }\r\n        }\r\n        return calendar;\r\n}\r\n\r\n","export const About = () => {\r\n    return (\r\n        <div>\r\n            <h4>Version 1.0.0</h4>\r\n        </div>\r\n    )\r\n}\r\nexport default About","import React from 'react'\r\nimport { useLocation } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport './FooterNav.css'\r\n\r\nexport const FooterNav = ({ value, onChange }) => {\r\n    function setToday() {\r\n        return moment().clone();\r\n    }\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <footer className=\"custom-element-bg\">\r\n            {\r\n                location.pathname === '/Calendar' && (\r\n                    <ul className=\"nav-links\">\r\n                        <li className=\"go-today\" onClick={() => onChange(setToday())}>\r\n                            Go to Today\r\n                        </li>\r\n                        <li>\r\n                            Day\r\n                        </li>\r\n                        <li>\r\n                            Week\r\n                        </li>\r\n                        <li>\r\n                            Month\r\n                        </li>\r\n                    </ul>\r\n                )}\r\n\r\n\r\n\r\n        </footer>\r\n\r\n    )\r\n}\r\n\r\nexport default FooterNav","import React, { useRef, useState } from 'react'\r\nimport {  BrowserRouter as Router, Route } from 'react-router-dom'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\nimport Calendar from './components/Calendar.js';\r\nimport About from './components/About.js';\r\nimport './style.css';\r\nimport FooterNav from './components/FooterNav.js';\r\n\r\nconst App = () => {\r\n    const styleRef = useRef();\r\n    function translate() {\r\n        styleRef.current.classList.toggle('nav-active');\r\n    }\r\n    const [value, setValue] = useState(moment());\r\n    return (\r\n        <Router>\r\n            <div className=\"App\">\r\n                <link\r\n                    rel=\"stylesheet\"\r\n                    href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"\r\n                />\r\n                <nav className=\"custom-element-bg\">\r\n                    <div className=\"logo\">\r\n                        <h4>HARRY J</h4>\r\n                    </div>\r\n                    <ul className=\"nav-links\" ref={styleRef}>\r\n                        <li>\r\n                            <Link to=\"/Home\">Home</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Calendar\">Calendar</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/Projects\">Projects</Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/About\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"burger\" onClick={translate}>\r\n                        <div className=\"line1\"></div>\r\n                        <div className=\"line2\"></div>\r\n                        <div className=\"line3\"></div>\r\n                    </div>\r\n                </nav>\r\n                \r\n                <FooterNav value={value} onChange={setValue} />\r\n                <Route path='/Calendar' \r\n                render={(props) => (\r\n                    <>\r\n                    {<Calendar value={value} onXChange={setValue} />}\r\n                    </>\r\n                )}/>\r\n                <Route path='/About' component={About} />\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}