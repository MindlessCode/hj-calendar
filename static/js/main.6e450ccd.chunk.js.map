{"version":3,"sources":["components/Task.js","components/NewTask.js","components/Tasks.js","components/Calendar.js","components/buildCal.js","App.js","reportWebVitals.js","index.js"],"names":["Task","taskL","onDelete","onToggle","className","reminder","onDoubleClick","id","text","style","color","justifyItems","cursor","onClick","NewTask","startDate","startMonth","moment","clone","startOf","endMonth","endOf","mon","subtract","months","isBefore","push","add","type","placeholder","map","month","format","sDate","value","disabled","Tasks","tasks","undefined","length","task","Calendar","onChange","useState","priority","exp","toString","eDate","setTasks","setStartDate","calendar","setCalendar","useEffect","startDay","endDay","day","end","date","iendDay","Array","fill","weekNum","buildCalendar","firstMonth","lastMonth","i","getMonthName","mons","isSame","arg","week","year","selectedDate","currDate","showDate","filter","App","styleRef","useRef","setValue","rel","href","ref","current","classList","toggle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e450ccd.chunk.js","sourcesContent":["import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({taskL, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${taskL.reminder ? 'reminder' : ''}`} onDoubleClick={()=> onToggle(taskL.id)}>\r\n            <h3>{taskL.text} <FaTimes style={{ color: 'red', justifyItems: 'right', cursor: 'pointer'}} onClick={()=>onDelete(taskL.id)}/></h3>\r\n        </div>\r\n    )\r\n}\r\nexport default Task\r\n","// import React, { useState } from 'react'\r\nimport moment from 'moment'\r\nimport './Task.css';\r\n\r\n\r\nconst NewTask = ({startDate}) => {\r\n    // const [text, setText] = useState('')\r\n    // const [day, setDay] = useState('')\r\n    // const [reminder, setReminder] = useState(false)\r\n    \r\n    //month drop down\r\n    const startMonth = moment().clone().startOf(\"year\")\r\n    const endMonth = moment().clone().endOf(\"year\")\r\n    const mon = startMonth.subtract(1, \"month\")\r\n    const months = [];\r\n    while(startMonth.isBefore(endMonth, \"month\")) {\r\n        months.push(mon.add(1,\"month\").clone())\r\n    }\r\n    //date drop down\r\n\r\n    return (\r\n        <form className='new-task-form'>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type='text' placeholder='Add New Task' />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Day & Time (MM/DD/YYYY)</label>\r\n                <select className='select-month'>\r\n                    {months.map(month => (<option key={month}>{month.format(\"MM\")}</option>))}\r\n                </select>\r\n                <select className='select-day'> \r\n                </select>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type='checkbox' />\r\n            </div>\r\n            {startDate.sDate >= moment().format(\"YYYY-MM-DD\") ? <input type=\"submit\" value=\"Submit\" className=\"sub-btn btn-block\"></input> : <input type=\"submit\" value=\"Submit\" className=\"sub-btn btn-disabled\" disabled></input>}\r\n        </form>\r\n    )\r\n}\r\nexport default NewTask\r\n","import Task from './Task'\r\nimport NewTask from './NewTask.js';\r\nimport moment from 'moment'\r\n\r\nimport './Task.css';\r\n\r\nconst Tasks =({tasks, startDate, onDelete, onToggle})=> {\r\n    return (\r\n        <div className=\"task-container\">\r\n          <h2> Date: {startDate.sDate===undefined? moment().format(\"YYYY-MM-DD\") : startDate.sDate} </h2>\r\n          <NewTask tasks={tasks} startDate={startDate}/>\r\n          <div>{tasks.length > 0 ? tasks.map((task)=> (\r\n                <Task key={task.id} taskL={task} startDate={startDate} onDelete={onDelete} onToggle={onToggle}/>\r\n            )\r\n          ) : \"No Tasks!\"}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Tasks\r\n","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport buildCalendar from \"./buildCal\";\r\nimport Tasks from './Tasks.js';\r\nimport './Calendar.css'\r\n\r\nconst Calendar = ({ value, onChange }) => {\r\n    const [tasks, setTasks] = useState([\r\n        {\r\n            id: 1,\r\n            text: 'Doctors Appointment',\r\n            priority: 5,\r\n            exp: 10,\r\n            sDate: moment().format(\"YYYY-MMM-DD\").toString(),\r\n            eDate:'',\r\n            reminder: true,\r\n        },\r\n        {\r\n            id: 2,\r\n            text: 'Homework',\r\n            priority: 4,\r\n            exp: 8,\r\n            sDate: moment().format(\"YYYY-MMM-DD\"),\r\n            eDate:'',\r\n            reminder: true,\r\n        },\r\n        {\r\n            id: 3,\r\n            text: 'Cook',\r\n            priority: 3,\r\n            exp: 6,\r\n            sDate: moment().format(\"YYYY-MMM-DD\"),\r\n            eDate:'',\r\n            reminder: false,\r\n        }\r\n    ])\r\n    const [startDate, setStartDate] = useState( ()=> {\r\n        return 0;\r\n    })\r\n    const [calendar, setCalendar] = useState([]);\r\n    useEffect(() => {\r\n        setCalendar(buildCalendar(value));\r\n    }, [value])\r\n    const mon = [];\r\n    const firstMonth = value.clone().startOf(\"year\").month();\r\n    const lastMonth = value.clone().endOf(\"year\").month();\r\n    function getMonthName() {\r\n        for (let i = firstMonth; i <= lastMonth; ++i)\r\n            mon.push(i)\r\n        return mon;\r\n    }\r\n    function currMonthName() {\r\n        return value.format(\"MMM\");\r\n    }\r\n    function currYear() {\r\n        return value.format(\"YYYY\");\r\n    }\r\n    function nextMonth() {\r\n        return value.clone().add(1, \"month\")\r\n    }\r\n    function prevMonth() {\r\n        return value.clone().subtract(1, \"month\")\r\n    }\r\n    function setMonthName(arg) {\r\n        return value.clone().month(arg)\r\n    }\r\n    const showDate = (year, month, selectedDate) => {\r\n        const currDate = [startDate];\r\n        var day = moment([year, month, selectedDate]).format(\"YYYY-MM-DD\")\r\n        currDate.sDate = day\r\n        tasks.map((task)=> task.sDate = currDate.sDate)\r\n        setStartDate(currDate);\r\n    }\r\n    const deleteTask = (id) => {\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n    const toggleReminder = (id) => {\r\n        setTasks(tasks.map((task)=> task.id === id ? {...task, reminder: !task.reminder} : task) )\r\n    }\r\n    return (\r\n        \r\n        <div className=\"wrapper\">\r\n            <div className=\"calendar\">\r\n                <div className=\"month-select\">\r\n                    {getMonthName().map(mons =>\r\n                        <div key={mons} className={value.isSame(value.clone().month(mons), \"month\") ? \"selected-month\" : \"unselected-months\"} onClick={() => onChange(setMonthName(mons))}>\r\n                            {moment().month(mons).format(\"MMM\")}\r\n                        </div>)}\r\n                </div>\r\n                <div className=\"month\">\r\n                    <div className=\"custom-element-bg current-month\">\r\n                        <i className=\"fas fa-angle-left prev\" onClick={() => onChange(prevMonth())}></i>\r\n                            <h1>{currMonthName()} {currYear()} </h1>\r\n                        <i className=\"fas fa-angle-right next\" onClick={() => onChange(nextMonth())}></i>\r\n                    </div>\r\n                    <div className=\"weekdays custom-element-bg\">\r\n                        <div>SUN</div>\r\n                        <div>MON</div>\r\n                        <div>TUE</div>\r\n                        <div>WED</div>\r\n                        <div>THU</div>\r\n                        <div>FRI</div>\r\n                        <div>SAT</div>\r\n                    </div>\r\n                        {calendar.map(week => <div key={week.toString()} className=\"weeks\">{\r\n                            week.map(day => <div key={day} className={(!(day.clone().month() === value.clone().month())) ? \"fill-days\" : startDate.sDate === day.format(\"YYYY-MM-DD\")? (((day.year() === moment().year())&&(day.date()=== moment().date()) && (value.clone().month() === moment().month()))) ? \"dates selected-date today custom-element-bg\" : 'dates selected-date' : (day.date()=== moment().date()) && (value.clone().month() === moment().month()) ? \"dates today custom-element-bg\" : \"dates\" }onClick={((day.clone().month() === value.clone().month())) ? () => showDate(day.year(), day.month(), day.date()): ()=> \"\"}>\r\n                                <div > {day.clone().format(\"D\").toString()} </div>\r\n                            </div>)\r\n                        }\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n          <Tasks tasks={tasks} startDate={startDate} onDelete={deleteTask} onToggle={toggleReminder}/> \r\n        </div>\r\n    )\r\n}\r\nexport default Calendar\r\n","export default function buildCalendar(value) {\r\n    const startDay = value.clone().startOf(\"month\").startOf(\"week\");\r\n    const endDay = value.clone().endOf(\"month\").endOf(\"week\");\r\n    const day = startDay.clone().subtract(1, \"day\");\r\n    const calendar = [];\r\n    const totalWeekRows = 6;\r\n    const end = endDay.date();\r\n    function iendDay (end) {\r\n        return endDay.add(end, \"day\");\r\n    }\r\n        while (day.isBefore(endDay, \"day\")) {\r\n            calendar.push(\r\n                Array(7).fill(0).map(() => day.add(1, \"day\").clone())\r\n            );\r\n            //Fill the gap in the panel (Panel can hold a total of 6 rows)\r\n            const weekNum = calendar.length;\r\n            let weekDays = 7;\r\n            if(end === day.date() && endDay.month() === day.month() && weekNum < totalWeekRows) {\r\n                let rowsToFill =  totalWeekRows - weekNum;\r\n                iendDay(rowsToFill * weekDays);\r\n            }\r\n        }\r\n        return calendar;\r\n}\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport moment from 'moment'\r\nimport Calendar from './components/Calendar.js';\r\nimport './style.css';\r\n\r\nconst App = () => {\r\n    const styleRef = useRef();\r\n    function translate() {\r\n        styleRef.current.classList.toggle('nav-active');\r\n    }\r\n    const [value, setValue] = useState(moment());\r\n    return (\r\n        <div className=\"App\">\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"\r\n            />\r\n                    <nav className=\"custom-element-bg\">\r\n                        <div className=\"logo\">\r\n                            <h4>HARRY J</h4>\r\n                        </div>\r\n                        <ul className=\"nav-links\" ref={styleRef}>\r\n                            <li>\r\n                                <a href=\"/#\">Home</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Calendar</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Projects</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">About</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"burger\" onClick={translate}>\r\n                            <div className=\"line1\"></div>\r\n                            <div className=\"line2\"></div>\r\n                            <div className=\"line3\"></div>\r\n                        </div>\r\n                    </nav>\r\n                        <Calendar value={value} onChange={setValue}/>\r\n                    </div>\r\n        );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}