{"version":3,"sources":["components/Task.js","components/NewTask.js","components/Tasks.js","components/Calendar.js","components/buildCal.js","App.js","reportWebVitals.js","index.js"],"names":["Task","taskL","onDelete","onToggle","className","reminder","onDoubleClick","id","text","style","color","justifyItems","cursor","onClick","sDate","eDate","NewTask","onAdd","useState","setText","moment","clone","format","monthSelect","setMonthSelect","daySelect","setDaySelect","yearSelect","setYearSelect","endMonthSelect","setEndMonthSelect","endDaySelect","setEndDaySelect","endYearSelect","setEndYearSelect","setReminder","startYear","year","endYear","selectYears","selectEYears","push","startEYear","endEYear","startMonth","startOf","endMonth","endOf","startEMonth","endEMonth","mon","subtract","monE","months","emonths","isBefore","add","lastDay","daysInMonth","dates","edates","i","console","log","lastEDay","j","onSubmit","e","preventDefault","date","alert","type","value","placeholder","onChange","target","defaultValue","map","month","day","checked","currentTarget","Tasks","tasks","setTasks","startDate","showAddTask","setShowAddTask","newTask","task","a","fetch","method","headers","body","JSON","stringify","res","json","data","length","Calendar","onXChange","useEffect","fetchTasks","tasksFromServer","getTasks","fetchTask","setStartDate","calendar","setCalendar","startDay","endDay","end","iendDay","Array","fill","weekNum","buildCalendar","firstMonth","lastMonth","deleteTask","filter","toggleReminder","taskToToggle","updTask","isDayAfterStart","nameKey","myArray","isDayBeforeEnd","getMonthName","mons","isSame","arg","week","selectedDate","currDay","toString","showDate","App","styleRef","useRef","setValue","rel","href","ref","current","classList","toggle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4566806e.chunk.js","sourcesContent":["import {FaTimes} from 'react-icons/fa'\r\nconst Task = ({taskL, onDelete, onToggle}) => {\r\n    return (\r\n        <div className={`task ${taskL.reminder ? 'reminder' : ''}`} onDoubleClick={()=> onToggle(taskL.id)}>\r\n            <h3>{taskL.text}  <FaTimes style={{ color: 'red', justifyItems: 'right', cursor: 'pointer'}} onClick={()=>onDelete(taskL.id)}/></h3>\r\n            <p>Starts: {taskL.sDate}</p>\r\n            <p>Ends: {taskL.eDate}</p>\r\n        </div>\r\n    )\r\n}\r\nexport default Task\r\n","import React, { useState } from 'react'\r\nimport moment from 'moment'\r\nimport './Task.css';\r\n\r\nconst NewTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [monthSelect, setMonthSelect] = useState(moment().clone().format(\"MM\"))\r\n    const [daySelect, setDaySelect] = useState(moment().clone().format(\"DD\"))\r\n    const [yearSelect, setYearSelect] = useState(moment().clone().format(\"YYYY\"))\r\n    const [endMonthSelect, setEndMonthSelect] = useState(moment().clone().format(\"MM\"))\r\n    const [endDaySelect, setEndDaySelect] = useState(moment().clone().format(\"DD\"))\r\n    const [endYearSelect, setEndYearSelect] = useState(moment().clone().format(\"YYYY\"))\r\n    const [reminder, setReminder] = useState(false)\r\n    //year drop down\r\n    var startYear = moment().clone().year()\r\n    const endYear = moment().clone().year() + 10\r\n    const selectYears = [];\r\n    const selectEYears = [];\r\n\r\n    while (startYear <= endYear) {\r\n        selectYears.push(startYear)\r\n\r\n        startYear++;\r\n    }\r\n    var startEYear = moment().clone().year()\r\n    const endEYear = moment().clone().year() + 10\r\n    while (startEYear <= endEYear) {\r\n        selectEYears.push(startEYear)\r\n\r\n        startEYear++;\r\n    }\r\n    //month drop down\r\n    const startMonth = moment().clone().startOf(\"year\")\r\n    const endMonth = moment().clone().endOf(\"year\")\r\n    const startEMonth = moment().clone().startOf(\"year\")\r\n    const endEMonth = moment().clone().endOf(\"year\")\r\n    const mon = startMonth.subtract(1, \"month\")\r\n    const monE = startEMonth.subtract(1, \"month\")\r\n    const months = [];\r\n    const emonths = [];\r\n    while (startMonth.isBefore(endMonth, \"month\")) {\r\n        months.push(mon.add(1, \"month\").clone())\r\n    }\r\n    while (startEMonth.isBefore(endEMonth, \"month\")) {\r\n        emonths.push(monE.add(1, \"month\").clone())\r\n    }\r\n    //day drop down\r\n    const lastDay = moment(yearSelect + '-' + monthSelect, \"YYYY-MM\").clone().daysInMonth();\r\n    const dates = [];\r\n    const edates = [];\r\n\r\n    for(var i = 1; i <= lastDay; i++) {\r\n        dates.push(i)\r\n\r\n    }\r\n    console.log(lastDay)\r\n    const lastEDay = moment(endYearSelect + '-' + endMonthSelect, \"YYYY-MM\").clone().daysInMonth();\r\n    for(var j = 1; j <= lastEDay; j++) {\r\n        edates.push(j)\r\n\r\n    }\r\n    const onSubmit =(e)=> {\r\n        e.preventDefault()\r\n        \r\n        if(!text) {\r\n            alert('Please add a task name')\r\n            return\r\n        }\r\n        \r\n        onAdd({text, sDate: yearSelect + '-' + monthSelect + '-' + moment().date(daySelect).format(\"DD\"),  eDate: endYearSelect + '-' + endMonthSelect + '-' + moment().date(endDaySelect).format(\"DD\"), reminder})\r\n\r\n        setText('')\r\n        setMonthSelect('')\r\n        setDaySelect('')\r\n        setYearSelect(moment().year())\r\n        setEndMonthSelect('')\r\n        setEndDaySelect('')\r\n        setEndYearSelect(moment().year())\r\n        setReminder(false)\r\n    }\r\n    return (\r\n            <form className='new-task-form' onSubmit={onSubmit}>\r\n                <div className='form-control' >\r\n                    <label>Task</label>\r\n                    <input type='text' value={text} placeholder='Add New Task' onChange={(e)=>setText(e.target.value)}/>\r\n                </div>\r\n                <div className='form-control'>\r\n                    <label>\r\n                        <span>Start</span>\r\n                    </label>\r\n                    <select className='select-month' value={monthSelect? monthSelect: 'none'} onChange={(e)=> setMonthSelect(e.target.value)}>\r\n                        <option value=\"none\"defaultValue=\"true\" >MONTH</option>\r\n                        {months.map(month => (<option key={month} value={month.format(\"MM\")}>{month.clone().format(\"MM\")}</option>))}\r\n                    </select>\r\n                    <select className='select-day' value={daySelect? daySelect: 'none'} onChange={(e)=> setDaySelect(e.target.value)}>\r\n                    <option value=\"none\" defaultValue=\"true\" >DAY</option>\r\n\r\n                        {dates.map(day => (<option key={day} value={day}>{day}</option>))}\r\n                    </select>\r\n                    <select className='select-year' value={yearSelect? yearSelect: 'none'} onChange={(e)=> setYearSelect(e.target.value)}>\r\n                    <option value=\"none\"  defaultValue=\"true\" >YEAR</option>\r\n                       {selectYears.map(year => (<option key={year} value={year}>{year}</option>))}\r\n                    </select>\r\n                    <label>\r\n                        <span>End</span>\r\n                    </label>\r\n                    <select className='select-month' value={endMonthSelect? endMonthSelect: 'none'} onChange={(e)=> setEndMonthSelect(e.target.value)}>\r\n                    <option value=\"none\"  defaultValue=\"true\" >MONTH</option>\r\n                        {emonths.map(month => (<option key={month} value={month.format(\"MM\")}>{month.format(\"MM\")}</option>))}\r\n                    </select>\r\n                    <select className='select-day' value={endDaySelect? endDaySelect: 'none'} onChange={(e)=> setEndDaySelect(e.target.value)}>\r\n                    <option value=\"none\"  defaultValue=\"true\" >DAY</option>\r\n                        {edates.map(day => (<option key={day} value={day}>{day}</option>))}\r\n                    </select>\r\n                    <select className='select-year' value={endYearSelect? endYearSelect: 'none'}  onChange={(e)=> setEndYearSelect(e.target.value)}>\r\n                    <option value=\"none\"  defaultValue=\"true\" >YEAR</option>\r\n                       {selectEYears.map(year => (<option key={year} value={year}>{year}</option>))}\r\n                    </select>\r\n                </div>\r\n                <div className='form-control form-control-check'>\r\n                    <label>Set Reminder</label>\r\n                    <input type='checkbox' checked={reminder} value={reminder} onChange={(e)=> setReminder(e.currentTarget.checked)}/>\r\n                </div>\r\n                <input type=\"submit\" value=\"Submit\" className=\"btn-block sub-btn\"></input>\r\n            </form>\r\n    )\r\n}\r\nexport default NewTask\r\n","import {useState} from 'react'\r\nimport Task from './Task'\r\nimport NewTask from './NewTask.js';\r\nimport './Task.css';\r\n\r\nconst Tasks =({tasks, setTasks, startDate, onDelete, onToggle})=> {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n    //add new task\r\n  const newTask = async (task)=> {\r\n    \r\n    const res = await fetch(`http://localhost:5000/tasks`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-type' : 'application/json'        \r\n      },\r\n      body: JSON.stringify(task)\r\n    })\r\n    \r\n    const data= await res.json()\r\n    setTasks([...tasks, data])\r\n    \r\n    // const id = Math.floor(Math.random() * 10000) + 1\r\n    // const newT ={id, ...task}\r\n    // setTasks([...tasks, newT])\r\n  } \r\n  return (\r\n        <div className=\"task-container\">\r\n          <h2>Tasks</h2>\r\n          <button className=\"btn-add-task\" onClick={()=> setShowAddTask(!showAddTask)}>{showAddTask ? 'CLOSE': 'ADD'}</button>\r\n           {showAddTask && <NewTask tasks={tasks} startDate={startDate} onAdd={newTask} />}\r\n       \r\n          <div>{tasks.length > 0 ? tasks.map((task)=> (\r\n                <Task key={task.id} taskL={task} startDate={startDate} onDelete={onDelete} onToggle={onToggle}/>\r\n            )\r\n          ) : \"No Tasks!\"}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Tasks","import React, { useState, useEffect } from 'react'\r\nimport moment from 'moment'\r\nimport buildCalendar from \"./buildCal\";\r\nimport Tasks from './Tasks.js';\r\nimport './Calendar.css'\r\n\r\nconst Calendar = ({ value, onXChange }) => {\r\n    const [tasks, setTasks] = useState([])\r\n    useEffect(()=>{\r\n        const getTasks = async ()=> {\r\n            const tasksFromServer = await fetchTasks()\r\n            setTasks(tasksFromServer)\r\n        }\r\n\r\n        getTasks()\r\n\r\n    }, [])\r\n    //fetch tasks\r\n    const fetchTasks = async () => {\r\n        const res = await fetch('http://localhost:5000/tasks')\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n    const fetchTask = async (id) => {\r\n        const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n    const [startDate, setStartDate] = useState( ()=> {\r\n        return 0;\r\n    })\r\n    const [calendar, setCalendar] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        setStartDate(moment().format(\"YYYY-MM-DD\"))\r\n\r\n        setCalendar(buildCalendar(value));\r\n    }, [value])\r\n    \r\n    const mon = [];\r\n    const firstMonth = value.clone().startOf(\"year\").month();\r\n    const lastMonth = value.clone().endOf(\"year\").month();\r\n    \r\n    function getMonthName() {\r\n        for (let i = firstMonth; i <= lastMonth; ++i)\r\n            mon.push(i)\r\n        return mon;\r\n    }\r\n    function currMonthName() {\r\n        return value.format(\"MMM\");\r\n    }\r\n    function currYear() {\r\n        return value.format(\"YYYY\");\r\n    }\r\n    function nextMonth() {\r\n        return value.clone().add(1, \"month\")\r\n    }\r\n    function prevMonth() {\r\n        return value.clone().subtract(1, \"month\")\r\n    }\r\n    function setMonthName(arg) {\r\n        return value.clone().month(arg)\r\n    }\r\n    const showDate = (year, month, selectedDate) => {\r\n        const currDay = [startDate];\r\n        currDay.sDate = moment([year, month, selectedDate]).format(\"YYYY-MM-DD\").toString()\r\n        setStartDate(currDay);\r\n    }\r\n    const deleteTask = async (id) => {\r\n        await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: 'DELETE',\r\n        })\r\n\r\n        setTasks(tasks.filter((task) => task.id !== id))\r\n    }\r\n    const toggleReminder = async (id) => {\r\n\r\n        const taskToToggle = await fetchTask(id)\r\n        const updTask = {...taskToToggle, reminder: !taskToToggle.reminder}\r\n\r\n        const res = await fetch(`http://localhost:5000/tasks/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type' : 'application/json'\r\n            },\r\n            body: JSON.stringify(updTask)\r\n        })\r\n        const data = await res.json()\r\n        setTasks(tasks.map((task)=> task.id === id ? {...task, reminder: data.reminder} : task) )\r\n    }\r\n\r\n\r\n    function isDayAfterStart(nameKey, myArray) {\r\n        for (var i = 0; i < myArray.length; i++) {\r\n            if(myArray[i].sDate <= nameKey)\r\n                return true;\r\n        }\r\n    }\r\n    function isDayBeforeEnd(nameKey, myArray) {\r\n        for (var i = 0; i < myArray.length; i++) {\r\n            if(myArray[i].eDate >= nameKey)\r\n                return true;\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"calendar\">\r\n                <div className=\"month-select\">\r\n                    {getMonthName().map(mons =>\r\n                        <div key={mons} className={value.isSame(value.clone().month(mons), \"month\") ? \"selected-month\" : \"unselected-months\"} onClick={() => onXChange(setMonthName(mons))}>\r\n                            {moment().month(mons).format(\"MMM\")}\r\n                        </div>)}\r\n                </div>\r\n                <div className=\"month\">\r\n                    <div className=\"custom-element-bg current-month\">\r\n                        <i className=\"fas fa-angle-left prev\" onClick={() => onXChange(prevMonth())}></i>\r\n                            <h1>{currMonthName()} {currYear()} </h1>\r\n                        <i className=\"fas fa-angle-right next\" onClick={() => onXChange(nextMonth())}></i>\r\n                    </div>\r\n                    <div className=\"weekdays custom-element-bg\">\r\n                        <div>SUN</div>\r\n                        <div>MON</div>\r\n                        <div>TUE</div>\r\n                        <div>WED</div>\r\n                        <div>THU</div>\r\n                        <div>FRI</div>\r\n                        <div>SAT</div>\r\n                    </div>\r\n                        {calendar.map(week => <div key={week} className=\"weeks\">{\r\n                            week.map(day => \r\n                            <div key={day} \r\n                                className={(!(day.clone().month() === value.clone().month())) ? \r\n                                    \"fill-days\" : startDate.sDate === day.clone().format(\"YYYY-MM-DD\") ? \r\n                                    (((day.year() === moment().format(\"YYYY\"))&&(day.date()=== moment().date()) && (day.clone().month() === moment().month()))) ? \r\n                                    \"dates selected-date today custom-element-bg\" : 'dates selected-date' : (day.year() === moment().year() && day.date()=== moment().date()) && (day.clone().month() === moment().month()) ?\r\n                                    \"dates today custom-element-bg\" : \"dates\" } \r\n                                    onClick={((day.clone().month() === value.clone().month())) ? () => showDate(day.year(), day.month(), day.date()): ()=> \"\"}>\r\n                                <div>  {day.clone().format(\"D\").toString()}</div>{isDayAfterStart(day.format(\"YYYY-MM-DD\").toString(), tasks) && isDayBeforeEnd(day.format(\"YYYY-MM-DD\").toString(), tasks)? <span>{\"\\u2B24\"}</span> : ''}\r\n                            </div>)\r\n                        }\r\n                        </div>)}\r\n                </div>\r\n            </div>\r\n          <Tasks tasks={tasks} setTasks={setTasks} startDate={startDate} onDelete={deleteTask} onToggle={toggleReminder}/> \r\n        </div>\r\n    )\r\n}\r\nexport default Calendar\r\n","export default function buildCalendar(value) {\r\n    const startDay = value.clone().startOf(\"month\").startOf(\"week\");\r\n    const endDay = value.clone().endOf(\"month\").endOf(\"week\");\r\n    const day = startDay.clone().subtract(1, \"day\");\r\n    const calendar = [];\r\n    const totalWeekRows = 6;\r\n    const end = endDay.date();\r\n    function iendDay (end) {\r\n        return endDay.add(end, \"day\");\r\n    }\r\n        while (day.isBefore(endDay, \"day\")) {\r\n            calendar.push(\r\n                Array(7).fill(0).map(() => day.add(1, \"day\").clone())\r\n            );\r\n            //Fill the gap in the panel (Panel can hold a total of 6 rows)\r\n            const weekNum = calendar.length;\r\n            let weekDays = 7;\r\n            if(end === day.date() && endDay.month() === day.month() && weekNum < totalWeekRows) {\r\n                let rowsToFill =  totalWeekRows - weekNum;\r\n                iendDay(rowsToFill * weekDays);\r\n            }\r\n        }\r\n        return calendar;\r\n}\r\n\r\n","import React, { useRef, useState } from 'react'\r\nimport moment from 'moment'\r\nimport Calendar from './components/Calendar.js';\r\nimport './style.css';\r\n\r\nconst App = () => {\r\n    const styleRef = useRef();\r\n    function translate() {\r\n        styleRef.current.classList.toggle('nav-active');\r\n    }\r\n    const [value, setValue] = useState(moment());\r\n    return (\r\n        <div className=\"App\">\r\n            <link\r\n                rel=\"stylesheet\"\r\n                href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.0/css/all.min.css\"\r\n            />\r\n                    <nav className=\"custom-element-bg\">\r\n                        <div className=\"logo\">\r\n                            <h4>HARRY J</h4>\r\n                        </div>\r\n                        <ul className=\"nav-links\" ref={styleRef}>\r\n                            <li>\r\n                                <a href=\"/#\">Home</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Calendar</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">Projects</a>\r\n                            </li>\r\n                            <li>\r\n                                <a href=\"/#\">About</a>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"burger\" onClick={translate}>\r\n                            <div className=\"line1\"></div>\r\n                            <div className=\"line2\"></div>\r\n                            <div className=\"line3\"></div>\r\n                        </div>\r\n                    </nav>\r\n                        <Calendar value={value} onXChange={setValue}/>\r\n                    </div>\r\n        );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n"],"sourceRoot":""}